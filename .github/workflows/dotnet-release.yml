name: .NET CI/CD

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
            framework: net8.0
          - os: ubuntu-latest
            rid: linux-arm
            framework: net8.0
          - os: ubuntu-latest
            rid: linux-arm64
            framework: net8.0
          - os: windows-latest
            rid: win-x64
            framework: net8.0-windows8.0

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore src/Samqtt/Samqtt.csproj

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Publish (only on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        run: dotnet publish src/Samqtt/Samqtt.csproj --configuration Release --framework ${{ matrix.framework }} --runtime ${{ matrix.rid }} --self-contained --output publish/${{ matrix.rid }}

      - name: Linux tar package
        if: matrix.os == 'ubuntu-latest' && startsWith(github.ref, 'refs/tags/v')
        run: |
          mkdir -p dist/samqtt
          cp -r publish/${{ matrix.rid }}/* dist/samqtt/
          cp -r ./setup/linux/* dist/samqtt/
          tar -czf samqtt-${{ matrix.rid }}.tar.gz -C dist samqtt

      - name: Windows zip package
        if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/v')
        run: |
             Compress-Archive -Path publish\${{ matrix.rid }}\* -DestinationPath samqtt-${{ matrix.rid }}.zip

      - name: Windows installer
        if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/v')
        run: |
             $innoSetupInstaller = "$env:RUNNER_TEMP\innosetup.exe"
             $innoSetupDir = "$env:RUNNER_TEMP\InnoSetup"
             Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe" -OutFile $innoSetupInstaller
             Start-Process -FilePath $innoSetupInstaller -ArgumentList "/VERYSILENT", "/NORESTART", "/SP-", "/DIR=$innoSetupDir" -Wait
             Write-Host "Inno Setup installed to $innoSetupDir"
             & "$env:RUNNER_TEMP\InnoSetup\ISCC.exe" setup\windows\SamqttInstaller.iss /DMyAppVersion=${{ github.ref_name }} /O$env:RUNNER_TEMP /FSamqttSetup-${{ matrix.rid }}

      - name: Upload artifacts compressed package
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: samqtt-${{ matrix.rid }}.${{ matrix.os == 'ubuntu-latest' && 'tar.gz' || 'zip' }}
          path: samqtt-${{ matrix.rid }}.${{ matrix.os == 'ubuntu-latest' && 'tar.gz' || 'zip' }}


      - name: Upload installer file
        if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: SamqttSetup-${{ matrix.rid }}.exe
          path: SamqttSetup-${{ matrix.rid }}.exe

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            artifacts/samqtt-linux-x64.tar.gz/samqtt-linux-x64.tar.gz
            artifacts/samqtt-linux-arm.tar.gz/samqtt-linux-arm.tar.gz
            artifacts/samqtt-linux-arm64.tar.gz/samqtt-linux-arm64.tar.gz
            artifacts/samqtt-win-x64.zip/samqtt-win-x64.zip
            artifacts/SamqttSetup-winx64.exe/SamqttSetup-winx64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
