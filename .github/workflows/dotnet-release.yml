name: .NET CI/CD

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
            framework: net8.0
            output: publish/linux-x64
          - os: ubuntu-latest
            rid: linux-arm
            framework: net8.0
            output: publish/linux-arm
          - os: ubuntu-latest
            rid: linux-arm64
            framework: net8.0
            output: publish/linux-arm64
          - os: windows-latest
            rid: win-x64
            framework: net8.0-windows8.0
            output: publish/windows

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore src/Samqtt/Samqtt.csproj

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Publish (only on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        run: dotnet publish src/Samqtt/Samqtt.csproj --configuration Release --framework ${{ matrix.framework }} --runtime ${{ matrix.rid }} --self-contained --output ${{ matrix.output }}

      - name: Compress artifacts (Linux)
        if: matrix.os == 'ubuntu-latest' && startsWith(github.ref, 'refs/tags/v')
        run: |
          cd ${{ matrix.output }}
          tar -czf ../../samqtt-${{ matrix.rid }}.tar.gz .

      - name: Compress artifacts (Windows)
        if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/v')
        run: |
          cd ${{ matrix.output }}
          Compress-Archive -Path * -DestinationPath ..\..\samqtt-${{ matrix.rid }}.zip

      - name: Install Inno Setup on Windows
        if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/v')
        run: |
          Invoke-WebRequest -Uri https://jrsoftware.org/download.php/is.exe -OutFile is.exe
          Start-Process -FilePath is.exe -ArgumentList "/VERYSILENT" -Wait

      - name: Find ISCC.exe and Build Setup Script
        if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/v')
        run: |
          $innoPath = Get-ChildItem -Path "C:\Program Files*" -Recurse -Filter ISCC.exe | Select-Object -First 1 -ExpandProperty FullName
          & $innoPath setup\SamqttInstaller.iss /DMyAppVersion=${{ github.ref_name }}

      - name: Upload artifacts (only on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: samqtt-${{ matrix.rid }}.${{ matrix.os == 'ubuntu-latest' && 'tar.gz' || 'zip' }}
          path: samqtt-${{ matrix.rid }}.${{ matrix.os == 'ubuntu-latest' && 'tar.gz' || 'zip' }}

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            artifacts/samqtt-linux-x64.tar.gz/samqtt-linux-x64.tar.gz
            artifacts/samqtt-linux-arm.tar.gz/samqtt-linux-arm.tar.gz
            artifacts/samqtt-linux-arm64.tar.gz/samqtt-linux-arm64.tar.gz
            artifacts/samqtt-win-x64.zip/samqtt-win-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
